Lo primero que debes hacer luego de descargar un proyecto existente a tu 
maquina local y después de haber configurado tu virtualhost, es instalar 
las dependencias del proyecto con Composer.

Esto lo puedes hacer usando el siguiente comando en la consola, dentro de 
la carpeta raíz del proyecto:

composer install

De esta forma se instalarán todas las dependencias necesarias para el 
proyecto que fueron definidas en el archivo composer.json durante el 
desarrollo.

Archivo de configuración de Laravel
Cada nuevo proyecto con Laravel, por defecto tiene un archivo .env con los 
datos de configuración necesarios para el mismo, cuando utilizamos un 
sistema de control de versiones como git, este archivo se excluye del 
repositorio por medidas de seguridad 

Sin embargo  existe un archivo llamado .env.example que es un ejemplo de 
como crear un el archivo de configuración, podemos copiar este archivo 
desde la consola con:

cp .env.example .env

De esta forma ya tenemos el archivo de configuración de nuestro proyecto.

Creando un nuevo API key
Por medidas de seguridad cada proyecto de Laravel cuenta con una clave única 
que se crea en el archivo .env al iniciar el proyecto. En caso de que el 
desarrollador no te haya proporcionado están información, puedes generar 
una nueva API key desde la consola usando

php artisan key:generate

Base de datos y migraciones
Por lo general las bases de datos en los proyectos de Laravel se crean 
haciendo uso de las migraciones.

Si el proyecto que estas instalando tiene definida una base de datos para 
su funcionamiento, por ejemplo MySql, debes primero crearla en tu servidor 
local.

Desde la consola (usando MySql) podrías hacer algo similar a esto

mysql -uroot -psecret

Con esto habrás ingresado a la consola de MySql y desde ahí creas 
la base de datos con:

mysql> CREATE DATABASE tu_base_de_datos;

Posteriormente debes agregar las credenciales al archivo .env

steriormente debes agregar las credenciales al archivo .env

DB_HOST=localhost
DB_DATABASE=tu_base_de_datos
DB_USERNAME=root
DB_PASSWORD=

Finalmente estarás habilitado para ejecutar la migración desde 
la consola usando artisan

php artisan migrate 

Si ademas el proyecto cuenta con seeders que requieras ejecutar 
puedes usar el siguiente flag

php artisan migrate --seed

